{"version":3,"file":"static/js/406.7ca04f7f.chunk.js","mappings":"sQACA,EAA4B,+BAA5B,EAA8G,+BAA9G,EAA0M,mCAA1M,EAAyP,+BAAzP,EAAqS,gC,SCkCrS,EAhCoB,SAAHA,GAA6B,IAAvBC,EAAeD,EAAfC,gBAQrB,OACEC,EAAAA,EAAAA,KAAA,WAASC,UAAWC,EAAkBC,UAElCC,EAAAA,EAAAA,MAAA,QAAMH,UAAWC,EAAeG,SAVjB,SAAAC,GACnBA,EAAEC,iBACF,IAAMC,EAAWF,EAAEG,cAAcC,SAASC,OAAOC,MACjDb,EAAgB,CAAEc,MAAOL,IACzBF,EAAEQ,OAAOC,OACX,EAK6DZ,SAAA,EACrDH,EAAAA,EAAAA,KAAA,SACEC,UAAWC,EACXc,KAAK,OACLC,WAAS,EACTC,KAAK,YAEPlB,EAAAA,EAAAA,KAAA,UACEC,UAAWC,EACXc,KAAK,SACLG,MAAM,KACNC,OAAO,KAAIjB,UAEXH,EAAAA,EAAAA,KAACqB,EAAAA,IAAiB,CAACpB,UAAWC,UAM1C,E,kBCYA,EAjCe,WACb,IAAAoB,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAlDI,EAAYF,EAAA,GAAEzB,EAAeyB,EAAA,GACpCG,GAAgCC,EAAAA,EAAAA,UAAS,MAAKC,GAAAJ,EAAAA,EAAAA,GAAAE,EAAA,GAAvCG,EAAQD,EAAA,GAAEE,EAAWF,EAAA,GAC5BG,GAAkCJ,EAAAA,EAAAA,WAAS,GAAMK,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAExBG,EAAcV,EAAaW,IAAI,SAmBrC,OAjBAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAa,eAAAzC,GAAA0C,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,UACfV,EAAY,CAADQ,EAAAE,KAAA,eAAAF,EAAAG,OAAA,wBAAAH,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAIKE,EAAAA,EAAAA,IAAiBZ,GAAa,KAAD,EAA1CO,EAAIC,EAAAK,KACVlB,EAAYY,EAAKO,SAASN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,UAE1BQ,EAAAA,EAAAA,IAAMR,EAAAO,GAAME,SAAS,QAED,OAFCT,EAAAC,KAAA,GAErBV,GAAa,GAAOS,EAAAU,OAAA,6BAAAV,EAAAW,OAAA,GAAAb,EAAA,wBAEvB,kBAZkB,OAAA5C,EAAA0D,MAAA,KAAAC,UAAA,KAanBlB,GACF,GAAG,CAACH,KAGFhC,EAAAA,EAAAA,MAAA,OAAKH,UAAWC,EAAcC,SAAA,EAC5BH,EAAAA,EAAAA,KAAC0D,EAAW,CAAC3D,gBAAiBA,IAC7BmC,IAAalC,EAAAA,EAAAA,KAAC2D,EAAAA,EAAM,IACpB7B,IAAY9B,EAAAA,EAAAA,KAAC4D,EAAAA,EAAc,CAACC,WAAY/B,MAG/C,C","sources":["webpack://react-homework-template/./src/components/SearchMovie/SearchMovie.module.css?c852","components/SearchMovie/SearchMovie.jsx","pages/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"searchBtn\":\"SearchMovie_searchBtn__GDASH\",\"homeBtn\":\"SearchMovie_homeBtn__ER7k5\",\"moviePage\":\"SearchMovie_moviePage__RDuI-\",\"searchForm\":\"SearchMovie_searchForm__unPlp\",\"searchSection\":\"SearchMovie_searchSection__0Ejr-\",\"inputForm\":\"SearchMovie_inputForm__d9enf\",\"searchIcon\":\"SearchMovie_searchIcon__cRodT\",\"movieLink\":\"SearchMovie_movieLink__hfe1X\"};","import { FaMagnifyingGlass } from 'react-icons/fa6';\nimport css from './SearchMovie.module.css';\n\nconst SearchMovie = ({ setSearchParams }) => {\n  const handleSubmit = e => {\n    e.preventDefault();\n    const formData = e.currentTarget.elements.search.value;\n    setSearchParams({ query: formData });\n    e.target.reset();\n  };\n\n  return (\n    <section className={css.searchSection}>\n      {\n        <form className={css.searchBtn} onSubmit={handleSubmit}>\n          <input\n            className={css.inputForm}\n            type=\"text\"\n            autoFocus\n            name=\"search\"\n          />\n          <button\n            className={css.searchBtn}\n            type=\"submit\"\n            width=\"30\"\n            height=\"30\"\n          >\n            <FaMagnifyingGlass className={css.searchIcon} />\n          </button>\n        </form>\n      }\n    </section>\n  );\n};\n\nexport default SearchMovie;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { toast } from 'react-toastify';\n\nimport { getSerchedMovies } from '../services/api';\nimport { default as SearchMovie } from 'components/SearchMovie/SearchMovie';\nimport { TrendMovieList } from '../components/MoviesList/MoviesList';\nimport { Loader } from 'components/Loader/Loader';\n\nimport css from '../components/SearchMovie/SearchMovie.module.css';\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searched, setSearched] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    const fetchSearched = async () => {\n      if (!searchQuery) {\n        return;\n      }\n      try {\n        const data = await getSerchedMovies(searchQuery);\n        setSearched(data.results);\n      } catch (error) {\n        toast(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSearched();\n  }, [searchQuery]);\n\n  return (\n    <div className={css.moviePage}>\n      <SearchMovie setSearchParams={setSearchParams} />\n      {isLoading && <Loader />}\n      {searched && <TrendMovieList moviesList={searched} />}\n    </div>\n  );\n};\n\nexport default Movies;\n"],"names":["_ref","setSearchParams","_jsx","className","css","children","_jsxs","onSubmit","e","preventDefault","formData","currentTarget","elements","search","value","query","target","reset","type","autoFocus","name","width","height","FaMagnifyingGlass","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","_useState","useState","_useState2","searched","setSearched","_useState3","_useState4","isLoading","setIsLoading","searchQuery","get","useEffect","fetchSearched","_asyncToGenerator","_regeneratorRuntime","_callee","data","_context","prev","next","abrupt","getSerchedMovies","sent","results","t0","toast","message","finish","stop","apply","arguments","SearchMovie","Loader","TrendMovieList","moviesList"],"sourceRoot":""}